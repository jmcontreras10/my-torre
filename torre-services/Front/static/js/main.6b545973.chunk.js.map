{"version":3,"sources":["Helpers/requests.js","Modules/User/UserProvider.js","Modules/Screen/ScreenProvider.js","Modules/Social/SocialProvider.js","UI/Components/LoadingIndicator/LoadingIndicator.js","UI/Components/Cards/AuthCard.js","UI/Pages/AuthPage.js","UI/Components/Bars/NavBar.js","UI/Components/Cards/PersonCard.js","UI/Pages/HomePage.js","App.js","reportWebVitals.js","index.js","UI/Components/Cards/AuthCard.module.scss","UI/Components/LoadingIndicator/LoadingIndicator.module.scss"],"names":["header","requestSome","a","options","path","method","body","undefined","headers","redirect","url","JSON","stringify","fetch","rawResponse","json","response","UserContext","createContext","UserUpdateContext","useUserHandlerContext","useContext","UserProvider","children","useState","userData","setUserData","login","username","password","internalCode","newUserData","user","sessionStorage","setItem","token","register","data","logout","Authorization","getItem","removeItem","Provider","value","ScreenContext","LoadingContext","useScreenContext","useLoadingContext","ScreenProvider","screen","setScreen","globalLoading","setGlobalLoading","useEffect","SocialContext","useSocialContext","SocialProvider","closePeople","setClosePeople","then","catch","err","console","log","loadClosePeople","error","LoadingIndicator","props","type","className","disabled","styles","anim","viewBox","initialState","authState","buttonText","authMessage","inputErrorsMessage","loading","userInfo","correctMatch","reducer","state","action","message","Error","AuthCard","userCreds","setUserCreds","useReducer","dispatch","verifyTorre","result","code","loginHandler","registerHandler","continueButtonHandler","e","preventDefault","onClick","src","alt","placeholder","autoComplete","basicInput","onChange","event","target","length","required","continueButton","href","rel","AuthPage","NavBar","logOut","PersonCard","id","patternUnits","width","height","picture","name","x","points","fill","HomePage","map","person","index","App","getScreen","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.6b545973.chunk.js","sourcesContent":["//const urlPath = process.env.URI;\r\n//const urlPath = \"http://localhost:3001/api\";\r\nconst urlPath = \"api\";\r\n\r\nconst header = {\r\n  \"Content-Type\": \"application/json\",\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n};\r\n\r\nconst requestSome = async (\r\n  options = {\r\n    path: \"/\",\r\n    method: \"GET\",\r\n    body: undefined,\r\n    headers: header,\r\n    redirect: \"follow\",\r\n  }\r\n) => {\r\n  const url = `${urlPath}${options.path}`;\r\n  if (options.body) options.body = JSON.stringify(options.body);\r\n  const rawResponse = await fetch(url, options);\r\n  const response = await rawResponse.json();\r\n  return response;\r\n};\r\n\r\nexport default requestSome;\r\n","//  Imports\r\n//  React\r\nimport { useContext, createContext, useState } from \"react\";\r\nimport requestSome from \"../../Helpers/requests\";\r\n\r\n//  Contexts\r\nconst UserContext = createContext();\r\nconst UserUpdateContext = createContext();\r\n\r\nexport const useUserContext = () => {\r\n  return useContext(UserContext);\r\n};\r\nexport const useUserHandlerContext = () => {\r\n  return useContext(UserUpdateContext);\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  //  The users Data context\r\n  const [userData, setUserData] = useState({});\r\n\r\n  /**\r\n   * This login the user returning a JWT Token [Bearer]\r\n   * @param {string} username\r\n   * @param {string} password\r\n   */\r\n  const login = async (username, password) => {\r\n    try {\r\n      const options = {\r\n        path: \"/auth/login\",\r\n        method: \"POST\",\r\n        body: { username, password },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const response = await requestSome(options);\r\n      if (response?.internalCode === 1400) throw response;\r\n      //  Save in the state the user Data fetched from the back\r\n      const newUserData = {\r\n        username: response.user.username,\r\n      };\r\n      //  Save Token\r\n      sessionStorage.setItem(\"JWTtorreJobsToken\", response.token);\r\n      sessionStorage.setItem(\"torreSocialUsername\", response.user.username);\r\n      //  Save\r\n      setUserData(newUserData);\r\n      return true;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (username, password) => {\r\n    try {\r\n      const options = {\r\n        path: \"/auth\",\r\n        method: \"POST\",\r\n        body: { username, password },\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      };\r\n      const response = await requestSome(options);\r\n      if (response?.internalCode !== 1201) throw response;\r\n      //  Save in the state the user Data fetched from the back\r\n      const newUserData = {\r\n        username: response.data.username,\r\n      };\r\n      //  Save Token\r\n      sessionStorage.setItem(\"JWTtorreJobsToken\", response.data.token);\r\n      sessionStorage.setItem(\"torreSocialUsername\", username);\r\n      //  Save\r\n      setUserData(newUserData);\r\n      return true;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const options = {\r\n        path: \"/auth/logout\",\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${sessionStorage.getItem(\r\n            \"JWTtorreJobsToken\"\r\n          )}`,\r\n        },\r\n      };\r\n      await requestSome(options);\r\n      //  Delete token\r\n      sessionStorage.removeItem(\"JWTtorreJobsToken\");\r\n      sessionStorage.removeItem(\"torreSocialUsername\");\r\n      //  Save\r\n      setUserData({});\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ userData }}>\r\n      <UserUpdateContext.Provider value={{ register, login, logout }}>\r\n        {children}\r\n      </UserUpdateContext.Provider>\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","//  Imports\r\n//  React\r\nimport { useContext, createContext, useState, useEffect } from \"react\";\r\n\r\n//  Contexts\r\nconst ScreenContext = createContext();\r\nconst LoadingContext = createContext();\r\n\r\nexport const useScreenContext = () => {\r\n  return useContext(ScreenContext);\r\n};\r\n\r\nexport const useLoadingContext = () => {\r\n  return useContext(LoadingContext);\r\n};\r\n\r\nexport const ScreenProvider = ({ children }) => {\r\n  const [screen, setScreen] = useState(0);\r\n  const [globalLoading, setGlobalLoading] = useState(false);\r\n  //  Initial state\r\n  //  [0: auth, 1: Home]\r\n  useEffect(() => {\r\n    setScreen(sessionStorage.getItem(\"JWTtorreJobsToken\") ? 1 : 0);\r\n  }, []);\r\n\r\n  return (\r\n    <ScreenContext.Provider value={{ screen, setScreen }}>\r\n      <LoadingContext.Provider value={{ globalLoading, setGlobalLoading }}>\r\n        {children}\r\n      </LoadingContext.Provider>\r\n    </ScreenContext.Provider>\r\n  );\r\n};\r\n","//  Imports\r\n//  React\r\nimport { useContext, createContext, useState, useEffect } from \"react\";\r\nimport requestSome from \"../../Helpers/requests\";\r\n\r\n//  Contexts\r\nconst SocialContext = createContext();\r\n\r\nexport const useSocialContext = () => {\r\n  return useContext(SocialContext);\r\n};\r\n\r\nexport const SocialProvider = ({ children }) => {\r\n  const [closePeople, setClosePeople] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const token = sessionStorage.getItem(\"JWTtorreJobsToken\");\r\n    const username = sessionStorage.getItem(\"torreSocialUsername\");\r\n    if (username) {\r\n      const options = {\r\n        path: `/social/close/${username}`,\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      };\r\n      requestSome(options)\r\n        .then((response) => {\r\n          setClosePeople(response.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  const loadClosePeople = async () => {\r\n    try {\r\n      const token = sessionStorage.getItem(\"JWTtorreJobsToken\");\r\n      const username = sessionStorage.getItem(\"torreSocialUsername\");\r\n      if (username) {\r\n        const options = {\r\n          path: `/social/close/${username}`,\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        };\r\n        requestSome(options)\r\n          .then((response) => {\r\n            console.log(JSON.stringify(response.data));\r\n            setClosePeople(response.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SocialContext.Provider value={{ closePeople, loadClosePeople }}>\r\n      {children}\r\n    </SocialContext.Provider>\r\n  );\r\n};\r\n","import styles from \"./LoadingIndicator.module.scss\";\r\n\r\nconst LoadingIndicator = (props) => {\r\n  return (\r\n    <button type=\"button\" className=\"bg-rose-600 m-auto mb-6 bg-\" disabled>\r\n      <div\r\n        className={`animate-spin h-10 w-10 mr-3 ${styles.anim} m-auto`}\r\n        viewBox=\"0 0 24 24\"\r\n      ></div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LoadingIndicator;\r\n","import { useState, useReducer } from \"react\";\r\nimport requestSome from \"../../../Helpers/requests\";\r\nimport {\r\n  useScreenContext,\r\n  useLoadingContext,\r\n} from \"../../../Modules/Screen/ScreenProvider\";\r\nimport {\r\n  useUserHandlerContext,\r\n} from \"../../../Modules/User/UserProvider\";\r\nimport {\r\n  useSocialContext,\r\n} from \"../../../Modules/Social/SocialProvider\";\r\nimport LoadingIndicator from \"../LoadingIndicator/LoadingIndicator\";\r\nimport styles from \"./AuthCard.module.scss\";\r\n\r\nconst initialState = {\r\n  authState: 0,\r\n  buttonText: \"Continue\",\r\n  authMessage: \"Do you have a Torre account?\",\r\n  inputErrorsMessage: undefined,\r\n  error: false,\r\n  loading: false,\r\n  userInfo: undefined,\r\n  correctMatch: true,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"GO_BEGINING\":\r\n      return initialState;\r\n    case \"GO_LOGIN\":\r\n      return {\r\n        ...state,\r\n        authState: 1,\r\n        authMessage: \"Cool, login to start\",\r\n        buttonText: \"Login\",\r\n        loading: false,\r\n        correctMatch: true,\r\n      };\r\n    case \"GO_REGISTER\":\r\n      return {\r\n        ...state,\r\n        authState: 2,\r\n        authMessage: \"You don't have an account yet, please register\",\r\n        buttonText: \"Register\",\r\n        loading: false,\r\n        correctMatch: false,\r\n      };\r\n    case \"GO_TORRE\":\r\n      return {\r\n        ...state,\r\n        authState: 3,\r\n        authMessage:\r\n          \"You don't have a Torre account yet, please register in the link below\",\r\n        error: true,\r\n        loading: false,\r\n      };\r\n    case \"GO_ERROR\":\r\n      return {\r\n        ...state,\r\n        authMessage: action.message,\r\n        error: true,\r\n        loading: false,\r\n      };\r\n    case \"LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"VERIFY\":\r\n      return {\r\n        ...state,\r\n        inputErrorsMessage: action.message,\r\n        correctMatch: action.value,\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\n/**\r\n * Card component for Register / Login\r\n */\r\nconst AuthCard = () => {\r\n  const [userCreds, setUserCreds] = useState({ username: \"\", password: \"\" });\r\n  //const userContext = useUserContext();\r\n  const { login, register } = useUserHandlerContext();\r\n  const { setScreen } = useScreenContext();\r\n  const { setGlobalLoading } = useLoadingContext();\r\n  const { loadClosePeople } = useSocialContext();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const verifyTorre = async () => {\r\n    try {\r\n      dispatch({ type: \"LOADING\" });\r\n      const result = await requestSome({\r\n        path: `/auth/val/${userCreds.username}`,\r\n      });\r\n      if (result.code === 200) {\r\n        dispatch({ type: \"GO_LOGIN\" });\r\n      } else if (result.code === 1001) {\r\n        dispatch({ type: \"GO_REGISTER\" });\r\n      } else if (result.code === 1000) {\r\n        dispatch({ type: \"GO_TORRE\" });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: \"GO_ERROR\", message: error.message });\r\n    }\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      setGlobalLoading(true);\r\n      await login(userCreds.username, userCreds.password);\r\n      await loadClosePeople();\r\n      setScreen(sessionStorage.getItem(\"JWTtorreJobsToken\") ? 1 : 0);\r\n      setGlobalLoading(false);\r\n    } catch (error) {\r\n      setGlobalLoading(false);\r\n      dispatch({ type: \"GO_ERROR\", message: error.message });\r\n    }\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      setGlobalLoading(true);\r\n      await register(userCreds.username, userCreds.password);\r\n      await loadClosePeople();\r\n      setScreen(sessionStorage.getItem(\"JWTtorreJobsToken\") ? 1 : 0);\r\n      setGlobalLoading(false);\r\n    } catch (error) {\r\n      setGlobalLoading(false);\r\n      dispatch({ type: \"GO_ERROR\", message: error.message });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This return the correct method for the Continue action Button\r\n   * It may change it functionality according the Existence of the User\r\n   * in the plataform and in Torre\r\n   * @param {*} e\r\n   */\r\n  const continueButtonHandler = async (e) => {\r\n    e.preventDefault();\r\n    //  Switch\r\n    switch (state.authState) {\r\n      //  In this case there's no Idea who's the user\r\n      case 0:\r\n        await verifyTorre();\r\n        break;\r\n      //  In this case, the user was recognized as plataformn registered\r\n      case 1:\r\n        await loginHandler();\r\n        break;\r\n      //  In this case the user was registered in Torre but not here, so he may create an account\r\n      case 2:\r\n        await registerHandler();\r\n        break;\r\n      //  The user is not regitered in this plataform nor in Torre\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This returns the current UI configuration for the Auth Card depending on the state of registration\r\n   * of the user\r\n   */\r\n  const cardComponent = () => {\r\n    return (\r\n      <div className={`bg-secondary p-12 color-white ${styles.AuthCard}`}>\r\n        <div className=\"w-auto flex justify-center flex-col text-center\">\r\n          {state.authState > 0 && (\r\n            <span className=\"w-full flex justify-start mb-10\">\r\n              <button\r\n                className=\"underline\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  dispatch({ type: \"GO_BEGINING\" });\r\n                }}\r\n              >\r\n                Back\r\n              </button>\r\n            </span>\r\n          )}\r\n          <img\r\n            src=\"https://torre-media.s3-us-west-2.amazonaws.com/organizations/Torre+(generic)+-+Dark+icon+-+Lime+(x2).png\"\r\n            className=\"object-contain h-28 w-full mb-5\"\r\n            alt=\"Torre co\"\r\n          />\r\n          {/* For SEO Purposes :  Title */}\r\n          <h1 className=\"text-2xl mb-5\">Torre Jobs</h1>\r\n          <div className=\"flex flex-col\">\r\n            <p className={`mb-3 ${state.error && \"text-red-500\"}`}>\r\n              {state.authMessage}\r\n            </p>\r\n            <p className=\"mb-3 text-red-500\">\r\n              {state.inputErrorsMessage && state.inputErrorsMessage}\r\n            </p>\r\n            {/* Username INPUT */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              autoComplete=\"off\"\r\n              className={styles.basicInput}\r\n              onChange={(event) => {\r\n                setUserCreds({ ...userCreds, username: event.target.value });\r\n              }}\r\n              disabled={state.authState === 3}\r\n            />\r\n\r\n            {/* password INPUT */}\r\n            {(state.authState === 1 || state.authState === 2) && (\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"password\"\r\n                autoComplete=\"off\"\r\n                className={styles.basicInput}\r\n                onChange={(event) => {\r\n                  setUserCreds({\r\n                    ...userCreds,\r\n                    password: event.target.value,\r\n                  });\r\n                  if (userCreds.password.length < 7) {\r\n                    dispatch({\r\n                      type: \"VERIFY\",\r\n                      value: false,\r\n                      message: \"Password must be longer than 7\",\r\n                    });\r\n                  } else {\r\n                    dispatch({\r\n                      type: \"VERIFY\",\r\n                      value: true,\r\n                      message: undefined,\r\n                    });\r\n                  }\r\n                }}\r\n                required\r\n              />\r\n            )}\r\n\r\n            {/* repeat password INPUT */}\r\n            {state.authState === 2 && (\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"repeat password\"\r\n                autoComplete=\"off\"\r\n                className={styles.basicInput}\r\n                onChange={(event) => {\r\n                  if (event.target.value !== userCreds.password)\r\n                    dispatch({\r\n                      type: \"VERIFY\",\r\n                      value: false,\r\n                      message: \"Passwords not match\",\r\n                    });\r\n                  else\r\n                    dispatch({\r\n                      type: \"VERIFY\",\r\n                      value: true,\r\n                      message: undefined,\r\n                    });\r\n                }}\r\n                required\r\n              />\r\n            )}\r\n\r\n            {state.loading ? (\r\n              <LoadingIndicator />\r\n            ) : (\r\n              <button\r\n                className={styles.continueButton}\r\n                onClick={continueButtonHandler}\r\n                disabled={state.authState === 3 || !state.correctMatch}\r\n              >\r\n                {state.buttonText}\r\n              </button>\r\n            )}\r\n\r\n            <a\r\n              href=\"https://www.torre.co/\"\r\n              target=\"_blank\"\r\n              className=\"mt-5 underline \"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Create one\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div>{cardComponent()}</div>;\r\n};\r\n\r\nexport default AuthCard;\r\n","import AuthCard from '../Components/Cards/AuthCard';\r\n\r\nconst AuthPage = () => {\r\n  return (\r\n    <main className=\"flex h-screen w-screen bg-onTerceary font-sans text-white\">\r\n      <div className=\"m-auto\">\r\n        <AuthCard />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default AuthPage;","import {\r\n  useScreenContext,\r\n  useLoadingContext,\r\n} from \"../../../Modules/Screen/ScreenProvider\";\r\n\r\nimport { useUserHandlerContext } from \"../../../Modules/User/UserProvider\";\r\n\r\nconst NavBar = () => {\r\n  const { setScreen } = useScreenContext();\r\n  const { logout } = useUserHandlerContext();\r\n  const { setGlobalLoading } = useLoadingContext();\r\n\r\n  const logOut = async () => {\r\n    try {\r\n      setGlobalLoading(true);\r\n      await logout();\r\n      setScreen(0);\r\n      setGlobalLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"fixed z-20 w-full\">\r\n      <div className=\"w-full bg-secondary flex flex-row justify-between items-center shadow-2xl\">\r\n        <h1 className=\"text-4xl text-white\">\r\n          <img\r\n            className=\"p-2\"\r\n            src=\"https://res.cloudinary.com/torre-technologies-co/image/upload/v1601512321/origin/bio/organizations/Torre_logo_small_uubm3e.png\"\r\n            alt=\"Torre logo\"\r\n          />\r\n        </h1>\r\n\r\n        <h1 className=\"text-5xl mb-3\">Your Network</h1>\r\n        <button\r\n          className=\"text-onPrimary justify-self-end bg-primary ml-3 p-2 rounded-lg mx-5 px-5\"\r\n          onClick={logOut}\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","const PersonCard = (props) => {\r\n  return (\r\n    <div className=\"bg-gray-800 p-5 color-white my-4 rounded-2xl h-full w-auto hover:bg-gray-700 hover:shadow-lg transition transform hover:-translate-y-1 hover:scale-110\">\r\n      <div className={`flex flex-col text-center content-center`}>\r\n        <svg\r\n          className=\"p-1 stroke-current stroke-2 text-primary\"\r\n          viewBox=\"0 0 100 100\"\r\n        >\r\n          <defs>\r\n            <pattern\r\n              id={props.username}\r\n              patternUnits=\"userSpaceOnUse\"\r\n              width=\"100\"\r\n              height=\"100\"\r\n            >\r\n              <image\r\n                href={props.picture}\r\n                alt={props.name}\r\n                x=\"-25\"\r\n                width=\"150\"\r\n                height=\"100\"\r\n              />\r\n            </pattern>\r\n          </defs>\r\n          <polygon points=\"50 1 95 25 95 75 50 99 5 75 5 25\" fill={`url(#${props.username})`} />\r\n        </svg>\r\n        <p>{props.name}</p>\r\n        <a\r\n          className=\"text-primary\"\r\n          href={\"https://bio.torre.co/\" + props.username}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\" @\" + props.username}\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PersonCard;\r\n\r\n\r\n","import { useSocialContext } from \"../../Modules/Social/SocialProvider\";\r\nimport NavBar from \"../Components/Bars/NavBar\";\r\nimport PersonCard from \"../Components/Cards/PersonCard\";\r\n\r\nconst HomePage = () => {\r\n  const { closePeople } = useSocialContext();\r\n\r\n  return (\r\n    <>\r\n      <main className=\"flex w-full bg-onTerceary font-sans text-white\">\r\n        <NavBar />\r\n        <div className=\"mt-28 mb-40 flex flex-col md:px-auto mx-auto\">\r\n          <div className=\"flex-col wra w-full grid grid-cols-1 gap-4 md:grid-cols-3 lg:grid-cols-6\">\r\n            {closePeople?.map((person, index) => {\r\n              return (\r\n                <PersonCard\r\n                  key={index}\r\n                  username={person.username}\r\n                  name={person.name}\r\n                  picture={person.picture}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer className=\"text-center bg-secondary fixed bottom-0 z-20 w-full py-8 px-5 text-white\">\r\n        Made by{\" \"}\r\n        <a\r\n        className=\"text-primary\"\r\n        href={\"https://bio.torre.co/jmcontreras10\" }\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        @jmcontreras10  \r\n      </a>\r\n      {\".  \"}visit me at:{\" \"}\r\n        <a\r\n          className=\"text-primary\"\r\n          href=\"https://mateocontreras.co/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          My Website\r\n        </a>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","//  Imports\nimport AuthPage from \"./UI/Pages/AuthPage\";\nimport HomePage from \"./UI/Pages/HomePage\";\nimport {\n  useScreenContext,\n  useLoadingContext,\n} from \"./Modules/Screen/ScreenProvider\";\nimport LoadingIndicator from \"./UI/Components/LoadingIndicator/LoadingIndicator\";\n\nfunction App() {\n  const { screen } = useScreenContext();\n  const { globalLoading } = useLoadingContext();\n  const getScreen = () => {\n    switch (screen) {\n      case 0:\n        return <AuthPage />;\n      case 1:\n        return <HomePage />;\n      default:\n        return null;\n    }\n  };\n  return (\n    <div className=\"App\">\n      {globalLoading && (\n        <div className=\"absolute top-0 left-0 flex h-screen w-screen bg-opacity-50 bg-white\">\n          <div className=\"m-auto\">\n            <LoadingIndicator />\n          </div>\n        </div>\n      )}\n      {getScreen()}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { UserProvider } from \"./Modules/User/UserProvider\";\nimport { ScreenProvider } from \"./Modules/Screen/ScreenProvider\";\nimport { SocialProvider } from \"./Modules/Social/SocialProvider\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UserProvider>\n      <ScreenProvider>\n        <SocialProvider>\n          <App />\n        </SocialProvider>\n      </ScreenProvider>\n    </UserProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"basicInput\":\"AuthCard_basicInput__10Skg\",\"continueButton\":\"AuthCard_continueButton__2_MSk\",\"AuthCard\":\"AuthCard_AuthCard__28Wxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"anim\":\"LoadingIndicator_anim__2Gls7\",\"animatespin\":\"LoadingIndicator_animatespin__17fDH\"};"],"sourceRoot":""}